// Code generated by protoc-gen-go-kiwi. DO NOT EDIT.

package player

import (
	"game/internal/common"
	"game/proto/pb"
	"github.com/15mga/kiwi"
	"github.com/15mga/kiwi/core"
	"github.com/15mga/kiwi/util"
)

func (s *svc) registerPusAndReq() {
	kiwi.Router().BindReq(common.Player, PlayerReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerReq](req, key, _svc.OnPlayer)
	})
	kiwi.Router().BindReq(common.Player, PlayerManyReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerManyReq](req, key, _svc.OnPlayerMany)
	})
	kiwi.Router().BindReq(common.Player, PlayerNewReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerNewReq](req, key, _svc.OnPlayerNew)
	})
	kiwi.Router().BindReq(common.Player, PlayerChangeNickReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerChangeNickReq](req, key, _svc.OnPlayerChangeNick)
	})
	kiwi.Router().BindReq(common.Player, PlayerIdReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerIdReq](req, key, _svc.OnPlayerId)
	})
	kiwi.Router().BindReq(common.Player, PlayerReconnectReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerReconnectReq](req, key, _svc.OnPlayerReconnect)
	})
	kiwi.Router().BindReq(common.Player, PlayerListReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerListReq](req, key, _svc.OnPlayerList)
	})
	kiwi.Router().BindReq(common.Player, PlayerDisconnectReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "pid")
		core.ActivePrcReq[*pb.PlayerDisconnectReq](req, key, _svc.OnPlayerDisconnect)
	})
}
