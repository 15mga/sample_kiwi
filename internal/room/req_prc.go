// Code generated by protoc-gen-go-kiwi. DO NOT EDIT.

package room

import (
	"game/internal/common"
	"game/proto/pb"
	"github.com/15mga/kiwi"
	"github.com/15mga/kiwi/core"
	"github.com/15mga/kiwi/util"
)

func (s *svc) registerReq() {
	kiwi.Router().BindReq(common.Room, RoomNewReq, func(req kiwi.IRcvRequest) {
		core.GoPrcReq[*pb.RoomNewReq](req, _svc.OnRoomNew)
	})
	kiwi.Router().BindReq(common.Room, RoomListReq, func(req kiwi.IRcvRequest) {
		core.GoPrcReq[*pb.RoomListReq](req, _svc.OnRoomList)
	})
	kiwi.Router().BindReq(common.Room, RoomEntryReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomEntryReq](req, key, _svc.OnRoomEntry)
	})
	kiwi.Router().BindReq(common.Room, RoomExitReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomExitReq](req, key, _svc.OnRoomExit)
	})
	kiwi.Router().BindReq(common.Room, RoomReadyReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomReadyReq](req, key, _svc.OnRoomReady)
	})
	kiwi.Router().BindReq(common.Room, RoomStartReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomStartReq](req, key, _svc.OnRoomStart)
	})
	kiwi.Router().BindReq(common.Room, RoomGetReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomGetReq](req, key, _svc.OnRoomGet)
	})
	kiwi.Router().BindReq(common.Room, RoomModifyReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomModifyReq](req, key, _svc.OnRoomModify)
	})
	kiwi.Router().BindReq(common.Room, RoomReconnectReq, func(req kiwi.IRcvRequest) {
		key, _ := util.MGet[string](req.Head(), "rid")
		core.ActivePrcReq[*pb.RoomReconnectReq](req, key, _svc.OnRoomReconnect)
	})
}
